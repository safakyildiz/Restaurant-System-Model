{\rtf1\ansi\ansicpg1254\deff0\nouicompat\deflang1055{\fonttbl{\f0\fnil\fcharset162 Calibri;}{\f1\fnil\fcharset238 Calibri;}{\f2\fnil\fcharset162 Arial Black;}{\f3\fnil Calibri;}{\f4\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\tab\tab\tab\tab\fs36 Restaurant\par
\fs32 List of Actors\par
Customer\fs28 :\par
-They come to the restaurant\par
-They look at he menu \par
-They give an order\par
-They may change their request and add something else\par
-After finishing the food.They pay the money\par
-Finally they express their ideas about the restaurant to the cashier\par
\fs22\par
\fs32 Waiter\fs22 :\par
\fs28 -they check every customer-\par
-And they go to the customer and get the requests from him/her\par
-After getting the orders,they deliver it and wait till they are ready\par
-After getting the prepared foods, they deliver it to the customer.\par
\fs22\par
\fs32 Manager\fs22 :\par
\fs28 -he/she deals with the management and financial issues of the restaurant\par
-he/she pays the prices to the personels monthly\par
-he/she also deals with bringing the foods by contacting with the supplier company \par
-he/she gets the report about the customer's ideas from cashier \par
-After this he/she can make changes to develop the service.\par
\fs22\par
\fs32 Supplier Company:\par
\fs28 -They provide the requested foods to the restaurant\par
-They only contact with the Manager\par
-They get paid after bringing the provided food.\par
-\f1\u304?\f0 f there is any problem with any of the foods,they will be responsible for it\par
-And they pay back the corresponding price.\par
\fs22\par
\fs32 Cashier:\par
\fs28 -he/she gets the payment from customers\par
-he/she  also takes the opinions of the customers about the restaurant\par
-he/she reports these ideas to the Manager \par
\fs22\par
\fs32 Business Use Cases\par
\fs28 -Delivering the Food--> by the Waiter\par
-Giving an Order-->by the Customer\par
-Making the payment-->by the Customer\par
-Dealing with Financial \f1\u304?\f0 ssues-->by the Manager\par
-Paying the price-->by the Manager\par
-Selling and Delivering the food to the Restaurant-->by the Supplier\par
-Dealing with the payment from customer-->by the Cashier\par
-\f1\u304?\f0 nforming the Manager about the Customer's ideas and suggestions-->by the Cashier.\par
\par
SHORT DESCR\f1\u304?\f0 PT\f1\u304?\f0 ON FOR THE PROJECT\par
-The restaurant system consists of actors and their goals.\par
-Main goal here is to provide a good service to the customers\par
-Manager deals with financial issues and has connection with Supplier Company to bring foods to the Restaurant.\par
-Waiters have to deliver the food to the Customers.\par
-Customers give order and after finishing the food has to pay the required money.They also may give their opinion about the Restaurant to the Cashier\par
-Cashier gives the prices from Customers and also deliver Customer's opinion to the Manager.\par
-Supplier Company must provide the requested foods to the Restaurant.\par
\par
\b\f2 The pattern of the Use Case description (scenario) according to Alistair Cockburn:\par
\b0\f0\par
Number (id) and the name of the Use Case:\par
1-Delivering the Food\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case: To deliver the requested food succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 All Customers who come to the Restaurant\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Waiter\f3\par
Participants (other Actors): \f0 Customer\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Getting the order from Customer\f3\par
Initial condition (what state of the world we expect at the beginning): \f1\u304?\f0 t may take time to deliver the food.This time changes and, depends on the food that is requested.\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to restart the order and bringing another one if there is any inconvenient with the service.\f3\par
Main scenario of the success (3-7 points in the form: 1. Client adds the product to the basket;  2. System successfully verifies availability of the product, etc.):\par
1.\f0 Waiter takes the order\f3\par
2.\f0 Delivers it.\f3\par
3.\f0 he/she waits till it is ready.\par
4.When it is ready.He/She delivers it to the Customer\f3\par
\f0\'85\f3\par
Extensions - Alternative scenarios - extensions to main scenario points: <<Extend>>\par
*. Extension to the event, which may happen at Any moment, eg. the user closes the browser, switches off the computer, etc. 1.1\f0\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
2-Giving an order\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case: To give an order to the waiter succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 The waiter who is getting the orders from Customer\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Customer\f3\par
Participants (other Actors): \f0 Waiter\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the waiter to take the orders from Customers\f3\par
Initial condition (what state of the world we expect at the beginning): \f0 none\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to restart the order and bringing another one if there is any inconvenient with the service.\f3\par
Main scenario of the success (3-7 points in the form: 1. Client adds the product to the basket;  2. System successfully verifies availability of the product, etc.):\par
1.\f0 Customer gives the order\f3\par
2.\f0 He/she waits till it is delivered.\f3\par
3.\f0 After finishing the food,he/she pays the requested price.\par
4.Finally if he/she wants, he/she may give advises to the cashier about the Restaurant's situation.\par
\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
3-Making The Payment\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case: To pay the requested price succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 All Customers who come to the Restaurant\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Customer\f3\par
Participants (other Actors): \f0 Cashier\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 After finishing the food and going to the cashier.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to give back the money if there is any inconvenient with the service.\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 After finishing the order and also the food this process starts\f3\par
2.\f0 Customer goes to the cashier\f3\par
3.\f0 And finally He/She pays the requested money\par
Extensions:\f1\u304?\f0 f it is desired.After making the payment.Customer may give extra money to the Waiter thanks to his/her good service.This is another use case called "Making extra payment to the Waiter."\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
4-Making extra payment to the Waiter\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case: To pay a desired money to the waiter.So this use case is optional.There is an extend dependency relation between this usecase and the "making the payment" usecase succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 All Customers who come to the Restaurant\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Customer\f3\par
Participants (other Actors): \f0 Waiter\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 After finishing the food and making the payment.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to give back the money if there is any inconvenient with the service.\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 After finishing the order and also the food this process starts\f3\par
2.\f0 Customer goes to the cashier\f3\par
3.\f0 And finally He/She pays the requested money\par
4.He/she may give money to the waiter thanks to his/her good services.\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
5-Dealing With Financial \f1\u304?\f0 ssues\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case: To manage the financial issues such as making the payment to the staff,bringing the foods from Supplier company and paying the requested price  succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Manager\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Manager\f3\par
Participants (other Actors): \f0 Waiter,Cashier,Supplier\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the last week of each month.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to pay the fees to the staff \f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 When the last week of the each month comes\f3\par
2.\f0 Manager pays the fees to the staff\f3\par
3.\f0 Takes the report from the cashier about customer's ideas\par
4.He/she also brings the foods from supplier company\par
5.Pays the prices of those foods to the Supplier Company\par
\par
\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
6-Paying The Price\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case:Making the payment to the staff succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Manager\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Manager\f3\par
Participants (other Actors): \f0 Waiter,Cashier\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the last week of each month.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to pay the fees to the staff \f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 When the last week of the each month comes\f3\par
2.\f0 Manager pays the fees to the staff\f3\par
3.\f0 Takes the report from the cashier about customer's ideas\par
Extensions\par
-There is a "include" dependency between this usecase and "Dealing with Financial \f1\u304?\f0 ssues" usecase.\par
\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
7-Selling and delivering the Requested food to the Restaurant.\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case:Selling and delivering the requested foods to the Restaurant succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Restaurant,Manager\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Supplier Company\f3\par
Participants (other Actors): \f0 Manager\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Getting a list of request  of foods from the Manager.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **We guarantee to pay back the money if there is any problem with delivery\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 Supplier company got a call from the manager\f3\par
2.\f0 Gets a list of which food to deliver\f3\par
3.\f0 it is prepared.\par
4.And finally it is  delivered to the Restaurant\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
8-Dealing with the payment with Customer.\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case:Getting the price and giving back if there is any change successfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Customer\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Cashier\f3\par
Participants (other Actors): \f0 Customer\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the customer to the cashier to pay the money.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Minimal guarantee (how interests are protected at any ending, even not successfull):\f0 **\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 Customer comes to the cashier to pay money\f3\par
2.\f0 Cashier gets the payment from customer via cash or credit card\f3\par
3.\f0 Cashier gives back the change if there is any.\par
\par
\par
\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
9-Getting paid more\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case:\f1\u304?\f0 nforming the Manager succesfully.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Manager\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Cashier\f3\par
Participants (other Actors): \f0 Manager\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the last week of each month.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 When the last week of the each month comes\f3\par
2.\f0 Cashier gives a report which includes the ideas and suggestions of the Customers\f3\par
3.\f0 Cashier does his/her best to give a good and detailed report to get extra fee from the manager.\par
4.\f1\u304?\f0 f he/she gives a good one ,he/she gets the extra fee at that month. \par
Extensions\par
-There is an "extend" dependency between this usecase and "Getting paid more" usecase.\par
\par
\par
\par
\par
\par
Number (id) and the name of the Use Case:\par
10-\f1\u304?nforming the Manager about the Customer's ideas and suggestions\f0\par
Author:\f1\'aa\f0 afak Y\f1\u305?\f0 ld\f1\u305?\f0 z\par
Objective of the Use Case:Getting more money because of a successful reporting.\par
Context (business goal of the Use Case): \par
Range (project range, ie. which system is a \'84black box\f3\rdblquote ): \f0 Manager\par
\f3 Level: (business level, function, subfunction with implementation details) \f0 Top Level\f3\par
Main Actor:\f0 Cashier\f3\par
Participants (other Actors): \f0 Manager\f3\par
Trigger (Initiating event \endash  what starts the Use Case): \f0 Arrival of the last week of each month.\f3\par
Initial condition (what state of the world we expect at the beginning):\f0 None\f3\par
Main scenario of the \f0 :\par
\f3 1.\f0 When the last week of the each month comes\f3\par
2.\f0 Cashier gives a report which includes the ideas and suggestions of the Customers\f3\par
3.\f0 Manager gets the report from the cashier about customer's ideas and if he/she wants, he/she may pay extra money to the Cashier.\par
\par
\par
\par
\par
\par
\par
\par
\par
\fs22\par
\tab\par
\f4\lang31\par
}
 